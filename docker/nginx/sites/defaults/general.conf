server_name locahost;
root /var/www/public;
index index.php index.html index.htm;

if ($http_host ~ "\.$" ){
    rewrite ^(.*) $scheme://$host$1 permanent;
}

# CORS for RQA [RD-7196]
add_header "Access-Control-Allow-Origin" $AccessControlAllowOrigin always;
add_header "Access-Control-Allow-Methods" $AccessControlAllowMethods always;
add_header "Access-Control-Allow-Headers" $AccessControlAllowHeaders always;

# Default redirects
rewrite ^/index.(html|php)$ / permanent;
merge_slashes off;
rewrite ^(.+)//+$ $1 permanent;
rewrite ^(.*)//+(.*)$ $1/$2 permanent;
# Redirect for crm [RD-7061]
rewrite ^/auth/session/new$ /account/login permanent;

# Payment notifications
location ~ ^/payments/(safecharge|genome|stripe|solidgate)/notify {
    auth_basic off;

    proxy_buffering on;
    proxy_buffer_size 256k;
    proxy_buffers 16 512k;
    proxy_busy_buffers_size 512k;
    proxy_max_temp_file_size 1024m;
    proxy_temp_file_write_size 512k;

    proxy_set_header HOST $crmDomain;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass "https://$crmDomain";
}

# Opcache API
location ~ ^/opcache-api/ {
    auth_basic off;
    include /etc/nginx/sites-available/defaults/php.conf;
}

# Proxy download
location ~* ^/private/(.*?)/(.*) {
    # Do not allow people to mess with this location directly
    # Only internal redirects are allowed
    internal;
    # Location-specific logging
    access_log /var/www/storage/logs/download.access.log;
    error_log /var/www/storage/logs/download.error.log warn;
    # Extract download url from the request
    set $s3_bucket        $1;
    set $url_full         '$2?$args';
    # Set download request headers
    proxy_http_version     1.1;
    proxy_set_header       Host $s3_bucket;
    proxy_set_header       Authorization '';
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;

    # Download the file and send it to client
    proxy_pass https://$s3_bucket/$url_full;
}

# Disable executing PHP scripts in uploads and violations folders
location ^~ /uploads/ {
    expires     1y;

    # Проверяем наличие файла в папке, если его нет - перенаправляем на laravel так же, как в основном скрипте (иначе нельзя будет скачать файлы с AWS по таким ссылкам)
    root /var/www/;
    try_files /public/$uri /public/index.php$is_args$args;
}
location ^~ /violations/ {
}

# Cache static file (images, styles, scripts, fonts for 1 year)
location ~* ^/assets/.*\.(css|js|gif|ico|jpe?g|png|svg|webp|eot|otf|ttf|woff|woff2)(\?[0-9]+)?$ {
    auth_basic off;
    expires     1y;
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public";
    add_header Pragma public;
}
location ^~ /assets/favicon/ {
    expires     1M;
    auth_basic off;
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public";
    add_header Pragma public;
}
# Redirect assets for CDN
location ~* ^/assets/(?<folder>css|js)_(?<id>[\w\d]+)/(?<file>.+)$ {
    auth_basic off;
    try_files $uri /assets/$folder/$file?id=$id;
}

# Rules to ignore rewrite from trailing slash for assets (RD-4238)
location ~* ^/(assets|orders/\d+/|uploads)/.*$ {
    root /var/www/;
    try_files /public/$uri /public/index.php$is_args$args;
}

# Laravel with caching
location / {
    # Меняем root, чтобы иметь возможность посмотреть в папку "storage"
    root /var/www/;

    # Redirect trailing slash
    # rewrite ^/(.*)/$ /$1 permanent;

    set $cache_file /storage/page-cache/${request_method}_$md5_uri.html;
    if (-f $document_root$cache_file$cookie_guest$uptimerobot) {
        # Запрещаем браузеру кэшировать эту страницу
        add_header Cache-Control no-cache;
        add_header Strict-Transport-Security 'max-age=31536000';
        expires epoch;

        # Перенаправляем ответ на кэш
        rewrite .* $cache_file break;
    }

    rewrite ^/index.php/(.*) /$1  permanent;

    # Ищем сначала закешированную версию страницы, потом существующий файл и только потом перенаправляем на ларавел
    try_files /public/$uri /public/index.php$is_args$args;

    # Старый вариант
    #try_files $uri $uri/ /index.php$is_args$args;
}

location ~ \.php$ {
    include /etc/nginx/sites-available/defaults/php.conf;
}
